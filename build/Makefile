# CMAKE generated file: DO NOT EDIT!
# Generated by "Unix Makefiles" Generator, CMake Version 3.22

# Default target executed when no arguments are given to make.
default_target: all
.PHONY : default_target

# Allow only one "make -f Makefile2" at a time, but pass parallelism.
.NOTPARALLEL:

#=============================================================================
# Special targets provided by cmake.

# Disable implicit rules so canonical targets will work.
.SUFFIXES:

# Disable VCS-based implicit rules.
% : %,v

# Disable VCS-based implicit rules.
% : RCS/%

# Disable VCS-based implicit rules.
% : RCS/%,v

# Disable VCS-based implicit rules.
% : SCCS/s.%

# Disable VCS-based implicit rules.
% : s.%

.SUFFIXES: .hpux_make_needs_suffix_list

# Command-line flag to silence nested $(MAKE).
$(VERBOSE)MAKESILENT = -s

#Suppress display of executed commands.
$(VERBOSE).SILENT:

# A target that is always out of date.
cmake_force:
.PHONY : cmake_force

#=============================================================================
# Set environment variables for the build.

# The shell in which to execute make rules.
SHELL = /bin/sh

# The CMake executable.
CMAKE_COMMAND = /usr/bin/cmake

# The command to remove a file.
RM = /usr/bin/cmake -E rm -f

# Escaping for special characters.
EQUALS = =

# The top-level source directory on which CMake was run.
CMAKE_SOURCE_DIR = /home/junhui/workspace/non-compiler/StewCPP

# The top-level build directory on which CMake was run.
CMAKE_BINARY_DIR = /home/junhui/workspace/non-compiler/StewCPP/build

#=============================================================================
# Targets provided globally by CMake.

# Special rule for the target edit_cache
edit_cache:
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Running CMake cache editor..."
	/usr/bin/ccmake -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR)
.PHONY : edit_cache

# Special rule for the target edit_cache
edit_cache/fast: edit_cache
.PHONY : edit_cache/fast

# Special rule for the target rebuild_cache
rebuild_cache:
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Running CMake to regenerate build system..."
	/usr/bin/cmake --regenerate-during-build -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR)
.PHONY : rebuild_cache

# Special rule for the target rebuild_cache
rebuild_cache/fast: rebuild_cache
.PHONY : rebuild_cache/fast

# The main all target
all: cmake_check_build_system
	$(CMAKE_COMMAND) -E cmake_progress_start /home/junhui/workspace/non-compiler/StewCPP/build/CMakeFiles /home/junhui/workspace/non-compiler/StewCPP/build//CMakeFiles/progress.marks
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 all
	$(CMAKE_COMMAND) -E cmake_progress_start /home/junhui/workspace/non-compiler/StewCPP/build/CMakeFiles 0
.PHONY : all

# The main clean target
clean:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 clean
.PHONY : clean

# The main clean target
clean/fast: clean
.PHONY : clean/fast

# Prepare targets for installation.
preinstall: all
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 preinstall
.PHONY : preinstall

# Prepare targets for installation.
preinstall/fast:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 preinstall
.PHONY : preinstall/fast

# clear depends
depend:
	$(CMAKE_COMMAND) -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 1
.PHONY : depend

#=============================================================================
# Target rules for targets named alignas.junhui

# Build rule for target.
alignas.junhui: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 alignas.junhui
.PHONY : alignas.junhui

# fast build rule for target.
alignas.junhui/fast:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/alignas.junhui.dir/build.make CMakeFiles/alignas.junhui.dir/build
.PHONY : alignas.junhui/fast

#=============================================================================
# Target rules for targets named class_size.junhui

# Build rule for target.
class_size.junhui: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 class_size.junhui
.PHONY : class_size.junhui

# fast build rule for target.
class_size.junhui/fast:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/class_size.junhui.dir/build.make CMakeFiles/class_size.junhui.dir/build
.PHONY : class_size.junhui/fast

#=============================================================================
# Target rules for targets named compile_function.junhui

# Build rule for target.
compile_function.junhui: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 compile_function.junhui
.PHONY : compile_function.junhui

# fast build rule for target.
compile_function.junhui/fast:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/compile_function.junhui.dir/build.make CMakeFiles/compile_function.junhui.dir/build
.PHONY : compile_function.junhui/fast

#=============================================================================
# Target rules for targets named copy_constructor.junhui

# Build rule for target.
copy_constructor.junhui: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 copy_constructor.junhui
.PHONY : copy_constructor.junhui

# fast build rule for target.
copy_constructor.junhui/fast:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/copy_constructor.junhui.dir/build.make CMakeFiles/copy_constructor.junhui.dir/build
.PHONY : copy_constructor.junhui/fast

#=============================================================================
# Target rules for targets named copy_deep.junhui

# Build rule for target.
copy_deep.junhui: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 copy_deep.junhui
.PHONY : copy_deep.junhui

# fast build rule for target.
copy_deep.junhui/fast:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/copy_deep.junhui.dir/build.make CMakeFiles/copy_deep.junhui.dir/build
.PHONY : copy_deep.junhui/fast

#=============================================================================
# Target rules for targets named cpp11.junhui

# Build rule for target.
cpp11.junhui: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 cpp11.junhui
.PHONY : cpp11.junhui

# fast build rule for target.
cpp11.junhui/fast:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/cpp11.junhui.dir/build.make CMakeFiles/cpp11.junhui.dir/build
.PHONY : cpp11.junhui/fast

#=============================================================================
# Target rules for targets named disassembly.junhui

# Build rule for target.
disassembly.junhui: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 disassembly.junhui
.PHONY : disassembly.junhui

# fast build rule for target.
disassembly.junhui/fast:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/disassembly.junhui.dir/build.make CMakeFiles/disassembly.junhui.dir/build
.PHONY : disassembly.junhui/fast

#=============================================================================
# Target rules for targets named double_colon.junhui

# Build rule for target.
double_colon.junhui: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 double_colon.junhui
.PHONY : double_colon.junhui

# fast build rule for target.
double_colon.junhui/fast:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/double_colon.junhui.dir/build.make CMakeFiles/double_colon.junhui.dir/build
.PHONY : double_colon.junhui/fast

#=============================================================================
# Target rules for targets named enclosed_class.junhui

# Build rule for target.
enclosed_class.junhui: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 enclosed_class.junhui
.PHONY : enclosed_class.junhui

# fast build rule for target.
enclosed_class.junhui/fast:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/enclosed_class.junhui.dir/build.make CMakeFiles/enclosed_class.junhui.dir/build
.PHONY : enclosed_class.junhui/fast

#=============================================================================
# Target rules for targets named forbid_copy_asign.junhui

# Build rule for target.
forbid_copy_asign.junhui: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 forbid_copy_asign.junhui
.PHONY : forbid_copy_asign.junhui

# fast build rule for target.
forbid_copy_asign.junhui/fast:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/forbid_copy_asign.junhui.dir/build.make CMakeFiles/forbid_copy_asign.junhui.dir/build
.PHONY : forbid_copy_asign.junhui/fast

#=============================================================================
# Target rules for targets named friends.junhui

# Build rule for target.
friends.junhui: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 friends.junhui
.PHONY : friends.junhui

# fast build rule for target.
friends.junhui/fast:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/friends.junhui.dir/build.make CMakeFiles/friends.junhui.dir/build
.PHONY : friends.junhui/fast

#=============================================================================
# Target rules for targets named global_macro.junhui

# Build rule for target.
global_macro.junhui: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 global_macro.junhui
.PHONY : global_macro.junhui

# fast build rule for target.
global_macro.junhui/fast:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/global_macro.junhui.dir/build.make CMakeFiles/global_macro.junhui.dir/build
.PHONY : global_macro.junhui/fast

#=============================================================================
# Target rules for targets named inherit.junhui

# Build rule for target.
inherit.junhui: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 inherit.junhui
.PHONY : inherit.junhui

# fast build rule for target.
inherit.junhui/fast:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/inherit.junhui.dir/build.make CMakeFiles/inherit.junhui.dir/build
.PHONY : inherit.junhui/fast

#=============================================================================
# Target rules for targets named knowledge_points.junhui

# Build rule for target.
knowledge_points.junhui: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 knowledge_points.junhui
.PHONY : knowledge_points.junhui

# fast build rule for target.
knowledge_points.junhui/fast:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/knowledge_points.junhui.dir/build.make CMakeFiles/knowledge_points.junhui.dir/build
.PHONY : knowledge_points.junhui/fast

#=============================================================================
# Target rules for targets named lambda.junhui

# Build rule for target.
lambda.junhui: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 lambda.junhui
.PHONY : lambda.junhui

# fast build rule for target.
lambda.junhui/fast:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/lambda.junhui.dir/build.make CMakeFiles/lambda.junhui.dir/build
.PHONY : lambda.junhui/fast

#=============================================================================
# Target rules for targets named main.junhui

# Build rule for target.
main.junhui: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 main.junhui
.PHONY : main.junhui

# fast build rule for target.
main.junhui/fast:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/main.junhui.dir/build.make CMakeFiles/main.junhui.dir/build
.PHONY : main.junhui/fast

#=============================================================================
# Target rules for targets named memory_in_c.junhui

# Build rule for target.
memory_in_c.junhui: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 memory_in_c.junhui
.PHONY : memory_in_c.junhui

# fast build rule for target.
memory_in_c.junhui/fast:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/memory_in_c.junhui.dir/build.make CMakeFiles/memory_in_c.junhui.dir/build
.PHONY : memory_in_c.junhui/fast

#=============================================================================
# Target rules for targets named meta_execute.junhui

# Build rule for target.
meta_execute.junhui: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 meta_execute.junhui
.PHONY : meta_execute.junhui

# fast build rule for target.
meta_execute.junhui/fast:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/meta_execute.junhui.dir/build.make CMakeFiles/meta_execute.junhui.dir/build
.PHONY : meta_execute.junhui/fast

#=============================================================================
# Target rules for targets named meta_naming.junhui

# Build rule for target.
meta_naming.junhui: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 meta_naming.junhui
.PHONY : meta_naming.junhui

# fast build rule for target.
meta_naming.junhui/fast:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/meta_naming.junhui.dir/build.make CMakeFiles/meta_naming.junhui.dir/build
.PHONY : meta_naming.junhui/fast

#=============================================================================
# Target rules for targets named method_chain.junhui

# Build rule for target.
method_chain.junhui: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 method_chain.junhui
.PHONY : method_chain.junhui

# fast build rule for target.
method_chain.junhui/fast:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/method_chain.junhui.dir/build.make CMakeFiles/method_chain.junhui.dir/build
.PHONY : method_chain.junhui/fast

#=============================================================================
# Target rules for targets named overload.junhui

# Build rule for target.
overload.junhui: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 overload.junhui
.PHONY : overload.junhui

# fast build rule for target.
overload.junhui/fast:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/overload.junhui.dir/build.make CMakeFiles/overload.junhui.dir/build
.PHONY : overload.junhui/fast

#=============================================================================
# Target rules for targets named overload_assignment.junhui

# Build rule for target.
overload_assignment.junhui: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 overload_assignment.junhui
.PHONY : overload_assignment.junhui

# fast build rule for target.
overload_assignment.junhui/fast:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/overload_assignment.junhui.dir/build.make CMakeFiles/overload_assignment.junhui.dir/build
.PHONY : overload_assignment.junhui/fast

#=============================================================================
# Target rules for targets named overload_math.junhui

# Build rule for target.
overload_math.junhui: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 overload_math.junhui
.PHONY : overload_math.junhui

# fast build rule for target.
overload_math.junhui/fast:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/overload_math.junhui.dir/build.make CMakeFiles/overload_math.junhui.dir/build
.PHONY : overload_math.junhui/fast

#=============================================================================
# Target rules for targets named overload_subscriptor.junhui

# Build rule for target.
overload_subscriptor.junhui: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 overload_subscriptor.junhui
.PHONY : overload_subscriptor.junhui

# fast build rule for target.
overload_subscriptor.junhui/fast:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/overload_subscriptor.junhui.dir/build.make CMakeFiles/overload_subscriptor.junhui.dir/build
.PHONY : overload_subscriptor.junhui/fast

#=============================================================================
# Target rules for targets named pack-deprecated.junhui

# Build rule for target.
pack-deprecated.junhui: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 pack-deprecated.junhui
.PHONY : pack-deprecated.junhui

# fast build rule for target.
pack-deprecated.junhui/fast:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/pack-deprecated.junhui.dir/build.make CMakeFiles/pack-deprecated.junhui.dir/build
.PHONY : pack-deprecated.junhui/fast

#=============================================================================
# Target rules for targets named prb_t.junhui

# Build rule for target.
prb_t.junhui: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 prb_t.junhui
.PHONY : prb_t.junhui

# fast build rule for target.
prb_t.junhui/fast:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/prb_t.junhui.dir/build.make CMakeFiles/prb_t.junhui.dir/build
.PHONY : prb_t.junhui/fast

#=============================================================================
# Target rules for targets named pure_class.junhui

# Build rule for target.
pure_class.junhui: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 pure_class.junhui
.PHONY : pure_class.junhui

# fast build rule for target.
pure_class.junhui/fast:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/pure_class.junhui.dir/build.make CMakeFiles/pure_class.junhui.dir/build
.PHONY : pure_class.junhui/fast

#=============================================================================
# Target rules for targets named referrence.junhui

# Build rule for target.
referrence.junhui: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 referrence.junhui
.PHONY : referrence.junhui

# fast build rule for target.
referrence.junhui/fast:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/referrence.junhui.dir/build.make CMakeFiles/referrence.junhui.dir/build
.PHONY : referrence.junhui/fast

#=============================================================================
# Target rules for targets named self_memcpy.junhui

# Build rule for target.
self_memcpy.junhui: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 self_memcpy.junhui
.PHONY : self_memcpy.junhui

# fast build rule for target.
self_memcpy.junhui/fast:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/self_memcpy.junhui.dir/build.make CMakeFiles/self_memcpy.junhui.dir/build
.PHONY : self_memcpy.junhui/fast

#=============================================================================
# Target rules for targets named self_shared_ptr.junhui

# Build rule for target.
self_shared_ptr.junhui: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 self_shared_ptr.junhui
.PHONY : self_shared_ptr.junhui

# fast build rule for target.
self_shared_ptr.junhui/fast:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/self_shared_ptr.junhui.dir/build.make CMakeFiles/self_shared_ptr.junhui.dir/build
.PHONY : self_shared_ptr.junhui/fast

#=============================================================================
# Target rules for targets named static_class.junhui

# Build rule for target.
static_class.junhui: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 static_class.junhui
.PHONY : static_class.junhui

# fast build rule for target.
static_class.junhui/fast:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/static_class.junhui.dir/build.make CMakeFiles/static_class.junhui.dir/build
.PHONY : static_class.junhui/fast

#=============================================================================
# Target rules for targets named string.junhui

# Build rule for target.
string.junhui: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 string.junhui
.PHONY : string.junhui

# fast build rule for target.
string.junhui/fast:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/string.junhui.dir/build.make CMakeFiles/string.junhui.dir/build
.PHONY : string.junhui/fast

#=============================================================================
# Target rules for targets named template.junhui

# Build rule for target.
template.junhui: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 template.junhui
.PHONY : template.junhui

# fast build rule for target.
template.junhui/fast:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/template.junhui.dir/build.make CMakeFiles/template.junhui.dir/build
.PHONY : template.junhui/fast

#=============================================================================
# Target rules for targets named test-tmp.junhui

# Build rule for target.
test-tmp.junhui: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 test-tmp.junhui
.PHONY : test-tmp.junhui

# fast build rule for target.
test-tmp.junhui/fast:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test-tmp.junhui.dir/build.make CMakeFiles/test-tmp.junhui.dir/build
.PHONY : test-tmp.junhui/fast

#=============================================================================
# Target rules for targets named this_ptr.junhui

# Build rule for target.
this_ptr.junhui: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 this_ptr.junhui
.PHONY : this_ptr.junhui

# fast build rule for target.
this_ptr.junhui/fast:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/this_ptr.junhui.dir/build.make CMakeFiles/this_ptr.junhui.dir/build
.PHONY : this_ptr.junhui/fast

#=============================================================================
# Target rules for targets named type_convertion_func.junhui

# Build rule for target.
type_convertion_func.junhui: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 type_convertion_func.junhui
.PHONY : type_convertion_func.junhui

# fast build rule for target.
type_convertion_func.junhui/fast:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/type_convertion_func.junhui.dir/build.make CMakeFiles/type_convertion_func.junhui.dir/build
.PHONY : type_convertion_func.junhui/fast

#=============================================================================
# Target rules for targets named va_args.junhui

# Build rule for target.
va_args.junhui: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 va_args.junhui
.PHONY : va_args.junhui

# fast build rule for target.
va_args.junhui/fast:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/va_args.junhui.dir/build.make CMakeFiles/va_args.junhui.dir/build
.PHONY : va_args.junhui/fast

#=============================================================================
# Target rules for targets named void_ptr.junhui

# Build rule for target.
void_ptr.junhui: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 void_ptr.junhui
.PHONY : void_ptr.junhui

# fast build rule for target.
void_ptr.junhui/fast:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/void_ptr.junhui.dir/build.make CMakeFiles/void_ptr.junhui.dir/build
.PHONY : void_ptr.junhui/fast

source/alignas.o: source/alignas.cpp.o
.PHONY : source/alignas.o

# target to build an object file
source/alignas.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/alignas.junhui.dir/build.make CMakeFiles/alignas.junhui.dir/source/alignas.cpp.o
.PHONY : source/alignas.cpp.o

source/alignas.i: source/alignas.cpp.i
.PHONY : source/alignas.i

# target to preprocess a source file
source/alignas.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/alignas.junhui.dir/build.make CMakeFiles/alignas.junhui.dir/source/alignas.cpp.i
.PHONY : source/alignas.cpp.i

source/alignas.s: source/alignas.cpp.s
.PHONY : source/alignas.s

# target to generate assembly for a file
source/alignas.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/alignas.junhui.dir/build.make CMakeFiles/alignas.junhui.dir/source/alignas.cpp.s
.PHONY : source/alignas.cpp.s

source/class_size.o: source/class_size.cpp.o
.PHONY : source/class_size.o

# target to build an object file
source/class_size.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/class_size.junhui.dir/build.make CMakeFiles/class_size.junhui.dir/source/class_size.cpp.o
.PHONY : source/class_size.cpp.o

source/class_size.i: source/class_size.cpp.i
.PHONY : source/class_size.i

# target to preprocess a source file
source/class_size.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/class_size.junhui.dir/build.make CMakeFiles/class_size.junhui.dir/source/class_size.cpp.i
.PHONY : source/class_size.cpp.i

source/class_size.s: source/class_size.cpp.s
.PHONY : source/class_size.s

# target to generate assembly for a file
source/class_size.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/class_size.junhui.dir/build.make CMakeFiles/class_size.junhui.dir/source/class_size.cpp.s
.PHONY : source/class_size.cpp.s

source/compile_function.o: source/compile_function.cpp.o
.PHONY : source/compile_function.o

# target to build an object file
source/compile_function.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/compile_function.junhui.dir/build.make CMakeFiles/compile_function.junhui.dir/source/compile_function.cpp.o
.PHONY : source/compile_function.cpp.o

source/compile_function.i: source/compile_function.cpp.i
.PHONY : source/compile_function.i

# target to preprocess a source file
source/compile_function.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/compile_function.junhui.dir/build.make CMakeFiles/compile_function.junhui.dir/source/compile_function.cpp.i
.PHONY : source/compile_function.cpp.i

source/compile_function.s: source/compile_function.cpp.s
.PHONY : source/compile_function.s

# target to generate assembly for a file
source/compile_function.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/compile_function.junhui.dir/build.make CMakeFiles/compile_function.junhui.dir/source/compile_function.cpp.s
.PHONY : source/compile_function.cpp.s

source/copy_constructor.o: source/copy_constructor.cpp.o
.PHONY : source/copy_constructor.o

# target to build an object file
source/copy_constructor.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/copy_constructor.junhui.dir/build.make CMakeFiles/copy_constructor.junhui.dir/source/copy_constructor.cpp.o
.PHONY : source/copy_constructor.cpp.o

source/copy_constructor.i: source/copy_constructor.cpp.i
.PHONY : source/copy_constructor.i

# target to preprocess a source file
source/copy_constructor.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/copy_constructor.junhui.dir/build.make CMakeFiles/copy_constructor.junhui.dir/source/copy_constructor.cpp.i
.PHONY : source/copy_constructor.cpp.i

source/copy_constructor.s: source/copy_constructor.cpp.s
.PHONY : source/copy_constructor.s

# target to generate assembly for a file
source/copy_constructor.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/copy_constructor.junhui.dir/build.make CMakeFiles/copy_constructor.junhui.dir/source/copy_constructor.cpp.s
.PHONY : source/copy_constructor.cpp.s

source/copy_deep.o: source/copy_deep.cpp.o
.PHONY : source/copy_deep.o

# target to build an object file
source/copy_deep.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/copy_deep.junhui.dir/build.make CMakeFiles/copy_deep.junhui.dir/source/copy_deep.cpp.o
.PHONY : source/copy_deep.cpp.o

source/copy_deep.i: source/copy_deep.cpp.i
.PHONY : source/copy_deep.i

# target to preprocess a source file
source/copy_deep.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/copy_deep.junhui.dir/build.make CMakeFiles/copy_deep.junhui.dir/source/copy_deep.cpp.i
.PHONY : source/copy_deep.cpp.i

source/copy_deep.s: source/copy_deep.cpp.s
.PHONY : source/copy_deep.s

# target to generate assembly for a file
source/copy_deep.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/copy_deep.junhui.dir/build.make CMakeFiles/copy_deep.junhui.dir/source/copy_deep.cpp.s
.PHONY : source/copy_deep.cpp.s

source/cpp11.o: source/cpp11.cpp.o
.PHONY : source/cpp11.o

# target to build an object file
source/cpp11.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/cpp11.junhui.dir/build.make CMakeFiles/cpp11.junhui.dir/source/cpp11.cpp.o
.PHONY : source/cpp11.cpp.o

source/cpp11.i: source/cpp11.cpp.i
.PHONY : source/cpp11.i

# target to preprocess a source file
source/cpp11.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/cpp11.junhui.dir/build.make CMakeFiles/cpp11.junhui.dir/source/cpp11.cpp.i
.PHONY : source/cpp11.cpp.i

source/cpp11.s: source/cpp11.cpp.s
.PHONY : source/cpp11.s

# target to generate assembly for a file
source/cpp11.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/cpp11.junhui.dir/build.make CMakeFiles/cpp11.junhui.dir/source/cpp11.cpp.s
.PHONY : source/cpp11.cpp.s

source/disassembly.o: source/disassembly.cpp.o
.PHONY : source/disassembly.o

# target to build an object file
source/disassembly.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/disassembly.junhui.dir/build.make CMakeFiles/disassembly.junhui.dir/source/disassembly.cpp.o
.PHONY : source/disassembly.cpp.o

source/disassembly.i: source/disassembly.cpp.i
.PHONY : source/disassembly.i

# target to preprocess a source file
source/disassembly.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/disassembly.junhui.dir/build.make CMakeFiles/disassembly.junhui.dir/source/disassembly.cpp.i
.PHONY : source/disassembly.cpp.i

source/disassembly.s: source/disassembly.cpp.s
.PHONY : source/disassembly.s

# target to generate assembly for a file
source/disassembly.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/disassembly.junhui.dir/build.make CMakeFiles/disassembly.junhui.dir/source/disassembly.cpp.s
.PHONY : source/disassembly.cpp.s

source/double_colon.o: source/double_colon.cpp.o
.PHONY : source/double_colon.o

# target to build an object file
source/double_colon.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/double_colon.junhui.dir/build.make CMakeFiles/double_colon.junhui.dir/source/double_colon.cpp.o
.PHONY : source/double_colon.cpp.o

source/double_colon.i: source/double_colon.cpp.i
.PHONY : source/double_colon.i

# target to preprocess a source file
source/double_colon.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/double_colon.junhui.dir/build.make CMakeFiles/double_colon.junhui.dir/source/double_colon.cpp.i
.PHONY : source/double_colon.cpp.i

source/double_colon.s: source/double_colon.cpp.s
.PHONY : source/double_colon.s

# target to generate assembly for a file
source/double_colon.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/double_colon.junhui.dir/build.make CMakeFiles/double_colon.junhui.dir/source/double_colon.cpp.s
.PHONY : source/double_colon.cpp.s

source/enclosed_class.o: source/enclosed_class.cpp.o
.PHONY : source/enclosed_class.o

# target to build an object file
source/enclosed_class.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/enclosed_class.junhui.dir/build.make CMakeFiles/enclosed_class.junhui.dir/source/enclosed_class.cpp.o
.PHONY : source/enclosed_class.cpp.o

source/enclosed_class.i: source/enclosed_class.cpp.i
.PHONY : source/enclosed_class.i

# target to preprocess a source file
source/enclosed_class.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/enclosed_class.junhui.dir/build.make CMakeFiles/enclosed_class.junhui.dir/source/enclosed_class.cpp.i
.PHONY : source/enclosed_class.cpp.i

source/enclosed_class.s: source/enclosed_class.cpp.s
.PHONY : source/enclosed_class.s

# target to generate assembly for a file
source/enclosed_class.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/enclosed_class.junhui.dir/build.make CMakeFiles/enclosed_class.junhui.dir/source/enclosed_class.cpp.s
.PHONY : source/enclosed_class.cpp.s

source/forbid_copy_asign.o: source/forbid_copy_asign.cpp.o
.PHONY : source/forbid_copy_asign.o

# target to build an object file
source/forbid_copy_asign.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/forbid_copy_asign.junhui.dir/build.make CMakeFiles/forbid_copy_asign.junhui.dir/source/forbid_copy_asign.cpp.o
.PHONY : source/forbid_copy_asign.cpp.o

source/forbid_copy_asign.i: source/forbid_copy_asign.cpp.i
.PHONY : source/forbid_copy_asign.i

# target to preprocess a source file
source/forbid_copy_asign.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/forbid_copy_asign.junhui.dir/build.make CMakeFiles/forbid_copy_asign.junhui.dir/source/forbid_copy_asign.cpp.i
.PHONY : source/forbid_copy_asign.cpp.i

source/forbid_copy_asign.s: source/forbid_copy_asign.cpp.s
.PHONY : source/forbid_copy_asign.s

# target to generate assembly for a file
source/forbid_copy_asign.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/forbid_copy_asign.junhui.dir/build.make CMakeFiles/forbid_copy_asign.junhui.dir/source/forbid_copy_asign.cpp.s
.PHONY : source/forbid_copy_asign.cpp.s

source/friends.o: source/friends.cpp.o
.PHONY : source/friends.o

# target to build an object file
source/friends.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/friends.junhui.dir/build.make CMakeFiles/friends.junhui.dir/source/friends.cpp.o
.PHONY : source/friends.cpp.o

source/friends.i: source/friends.cpp.i
.PHONY : source/friends.i

# target to preprocess a source file
source/friends.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/friends.junhui.dir/build.make CMakeFiles/friends.junhui.dir/source/friends.cpp.i
.PHONY : source/friends.cpp.i

source/friends.s: source/friends.cpp.s
.PHONY : source/friends.s

# target to generate assembly for a file
source/friends.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/friends.junhui.dir/build.make CMakeFiles/friends.junhui.dir/source/friends.cpp.s
.PHONY : source/friends.cpp.s

source/global_macro.o: source/global_macro.cpp.o
.PHONY : source/global_macro.o

# target to build an object file
source/global_macro.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/global_macro.junhui.dir/build.make CMakeFiles/global_macro.junhui.dir/source/global_macro.cpp.o
.PHONY : source/global_macro.cpp.o

source/global_macro.i: source/global_macro.cpp.i
.PHONY : source/global_macro.i

# target to preprocess a source file
source/global_macro.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/global_macro.junhui.dir/build.make CMakeFiles/global_macro.junhui.dir/source/global_macro.cpp.i
.PHONY : source/global_macro.cpp.i

source/global_macro.s: source/global_macro.cpp.s
.PHONY : source/global_macro.s

# target to generate assembly for a file
source/global_macro.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/global_macro.junhui.dir/build.make CMakeFiles/global_macro.junhui.dir/source/global_macro.cpp.s
.PHONY : source/global_macro.cpp.s

source/inherit.o: source/inherit.cpp.o
.PHONY : source/inherit.o

# target to build an object file
source/inherit.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/inherit.junhui.dir/build.make CMakeFiles/inherit.junhui.dir/source/inherit.cpp.o
.PHONY : source/inherit.cpp.o

source/inherit.i: source/inherit.cpp.i
.PHONY : source/inherit.i

# target to preprocess a source file
source/inherit.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/inherit.junhui.dir/build.make CMakeFiles/inherit.junhui.dir/source/inherit.cpp.i
.PHONY : source/inherit.cpp.i

source/inherit.s: source/inherit.cpp.s
.PHONY : source/inherit.s

# target to generate assembly for a file
source/inherit.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/inherit.junhui.dir/build.make CMakeFiles/inherit.junhui.dir/source/inherit.cpp.s
.PHONY : source/inherit.cpp.s

source/knowledge_points.o: source/knowledge_points.cpp.o
.PHONY : source/knowledge_points.o

# target to build an object file
source/knowledge_points.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/knowledge_points.junhui.dir/build.make CMakeFiles/knowledge_points.junhui.dir/source/knowledge_points.cpp.o
.PHONY : source/knowledge_points.cpp.o

source/knowledge_points.i: source/knowledge_points.cpp.i
.PHONY : source/knowledge_points.i

# target to preprocess a source file
source/knowledge_points.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/knowledge_points.junhui.dir/build.make CMakeFiles/knowledge_points.junhui.dir/source/knowledge_points.cpp.i
.PHONY : source/knowledge_points.cpp.i

source/knowledge_points.s: source/knowledge_points.cpp.s
.PHONY : source/knowledge_points.s

# target to generate assembly for a file
source/knowledge_points.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/knowledge_points.junhui.dir/build.make CMakeFiles/knowledge_points.junhui.dir/source/knowledge_points.cpp.s
.PHONY : source/knowledge_points.cpp.s

source/lambda.o: source/lambda.cpp.o
.PHONY : source/lambda.o

# target to build an object file
source/lambda.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/lambda.junhui.dir/build.make CMakeFiles/lambda.junhui.dir/source/lambda.cpp.o
.PHONY : source/lambda.cpp.o

source/lambda.i: source/lambda.cpp.i
.PHONY : source/lambda.i

# target to preprocess a source file
source/lambda.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/lambda.junhui.dir/build.make CMakeFiles/lambda.junhui.dir/source/lambda.cpp.i
.PHONY : source/lambda.cpp.i

source/lambda.s: source/lambda.cpp.s
.PHONY : source/lambda.s

# target to generate assembly for a file
source/lambda.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/lambda.junhui.dir/build.make CMakeFiles/lambda.junhui.dir/source/lambda.cpp.s
.PHONY : source/lambda.cpp.s

source/main.o: source/main.cpp.o
.PHONY : source/main.o

# target to build an object file
source/main.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/main.junhui.dir/build.make CMakeFiles/main.junhui.dir/source/main.cpp.o
.PHONY : source/main.cpp.o

source/main.i: source/main.cpp.i
.PHONY : source/main.i

# target to preprocess a source file
source/main.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/main.junhui.dir/build.make CMakeFiles/main.junhui.dir/source/main.cpp.i
.PHONY : source/main.cpp.i

source/main.s: source/main.cpp.s
.PHONY : source/main.s

# target to generate assembly for a file
source/main.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/main.junhui.dir/build.make CMakeFiles/main.junhui.dir/source/main.cpp.s
.PHONY : source/main.cpp.s

source/memory_in_c.o: source/memory_in_c.cpp.o
.PHONY : source/memory_in_c.o

# target to build an object file
source/memory_in_c.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/memory_in_c.junhui.dir/build.make CMakeFiles/memory_in_c.junhui.dir/source/memory_in_c.cpp.o
.PHONY : source/memory_in_c.cpp.o

source/memory_in_c.i: source/memory_in_c.cpp.i
.PHONY : source/memory_in_c.i

# target to preprocess a source file
source/memory_in_c.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/memory_in_c.junhui.dir/build.make CMakeFiles/memory_in_c.junhui.dir/source/memory_in_c.cpp.i
.PHONY : source/memory_in_c.cpp.i

source/memory_in_c.s: source/memory_in_c.cpp.s
.PHONY : source/memory_in_c.s

# target to generate assembly for a file
source/memory_in_c.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/memory_in_c.junhui.dir/build.make CMakeFiles/memory_in_c.junhui.dir/source/memory_in_c.cpp.s
.PHONY : source/memory_in_c.cpp.s

source/meta_execute.o: source/meta_execute.cpp.o
.PHONY : source/meta_execute.o

# target to build an object file
source/meta_execute.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/meta_execute.junhui.dir/build.make CMakeFiles/meta_execute.junhui.dir/source/meta_execute.cpp.o
.PHONY : source/meta_execute.cpp.o

source/meta_execute.i: source/meta_execute.cpp.i
.PHONY : source/meta_execute.i

# target to preprocess a source file
source/meta_execute.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/meta_execute.junhui.dir/build.make CMakeFiles/meta_execute.junhui.dir/source/meta_execute.cpp.i
.PHONY : source/meta_execute.cpp.i

source/meta_execute.s: source/meta_execute.cpp.s
.PHONY : source/meta_execute.s

# target to generate assembly for a file
source/meta_execute.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/meta_execute.junhui.dir/build.make CMakeFiles/meta_execute.junhui.dir/source/meta_execute.cpp.s
.PHONY : source/meta_execute.cpp.s

source/meta_naming.o: source/meta_naming.cpp.o
.PHONY : source/meta_naming.o

# target to build an object file
source/meta_naming.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/meta_naming.junhui.dir/build.make CMakeFiles/meta_naming.junhui.dir/source/meta_naming.cpp.o
.PHONY : source/meta_naming.cpp.o

source/meta_naming.i: source/meta_naming.cpp.i
.PHONY : source/meta_naming.i

# target to preprocess a source file
source/meta_naming.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/meta_naming.junhui.dir/build.make CMakeFiles/meta_naming.junhui.dir/source/meta_naming.cpp.i
.PHONY : source/meta_naming.cpp.i

source/meta_naming.s: source/meta_naming.cpp.s
.PHONY : source/meta_naming.s

# target to generate assembly for a file
source/meta_naming.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/meta_naming.junhui.dir/build.make CMakeFiles/meta_naming.junhui.dir/source/meta_naming.cpp.s
.PHONY : source/meta_naming.cpp.s

source/method_chain.o: source/method_chain.cpp.o
.PHONY : source/method_chain.o

# target to build an object file
source/method_chain.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/method_chain.junhui.dir/build.make CMakeFiles/method_chain.junhui.dir/source/method_chain.cpp.o
.PHONY : source/method_chain.cpp.o

source/method_chain.i: source/method_chain.cpp.i
.PHONY : source/method_chain.i

# target to preprocess a source file
source/method_chain.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/method_chain.junhui.dir/build.make CMakeFiles/method_chain.junhui.dir/source/method_chain.cpp.i
.PHONY : source/method_chain.cpp.i

source/method_chain.s: source/method_chain.cpp.s
.PHONY : source/method_chain.s

# target to generate assembly for a file
source/method_chain.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/method_chain.junhui.dir/build.make CMakeFiles/method_chain.junhui.dir/source/method_chain.cpp.s
.PHONY : source/method_chain.cpp.s

source/overload.o: source/overload.cpp.o
.PHONY : source/overload.o

# target to build an object file
source/overload.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/overload.junhui.dir/build.make CMakeFiles/overload.junhui.dir/source/overload.cpp.o
.PHONY : source/overload.cpp.o

source/overload.i: source/overload.cpp.i
.PHONY : source/overload.i

# target to preprocess a source file
source/overload.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/overload.junhui.dir/build.make CMakeFiles/overload.junhui.dir/source/overload.cpp.i
.PHONY : source/overload.cpp.i

source/overload.s: source/overload.cpp.s
.PHONY : source/overload.s

# target to generate assembly for a file
source/overload.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/overload.junhui.dir/build.make CMakeFiles/overload.junhui.dir/source/overload.cpp.s
.PHONY : source/overload.cpp.s

source/overload_assignment.o: source/overload_assignment.cpp.o
.PHONY : source/overload_assignment.o

# target to build an object file
source/overload_assignment.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/overload_assignment.junhui.dir/build.make CMakeFiles/overload_assignment.junhui.dir/source/overload_assignment.cpp.o
.PHONY : source/overload_assignment.cpp.o

source/overload_assignment.i: source/overload_assignment.cpp.i
.PHONY : source/overload_assignment.i

# target to preprocess a source file
source/overload_assignment.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/overload_assignment.junhui.dir/build.make CMakeFiles/overload_assignment.junhui.dir/source/overload_assignment.cpp.i
.PHONY : source/overload_assignment.cpp.i

source/overload_assignment.s: source/overload_assignment.cpp.s
.PHONY : source/overload_assignment.s

# target to generate assembly for a file
source/overload_assignment.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/overload_assignment.junhui.dir/build.make CMakeFiles/overload_assignment.junhui.dir/source/overload_assignment.cpp.s
.PHONY : source/overload_assignment.cpp.s

source/overload_math.o: source/overload_math.cpp.o
.PHONY : source/overload_math.o

# target to build an object file
source/overload_math.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/overload_math.junhui.dir/build.make CMakeFiles/overload_math.junhui.dir/source/overload_math.cpp.o
.PHONY : source/overload_math.cpp.o

source/overload_math.i: source/overload_math.cpp.i
.PHONY : source/overload_math.i

# target to preprocess a source file
source/overload_math.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/overload_math.junhui.dir/build.make CMakeFiles/overload_math.junhui.dir/source/overload_math.cpp.i
.PHONY : source/overload_math.cpp.i

source/overload_math.s: source/overload_math.cpp.s
.PHONY : source/overload_math.s

# target to generate assembly for a file
source/overload_math.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/overload_math.junhui.dir/build.make CMakeFiles/overload_math.junhui.dir/source/overload_math.cpp.s
.PHONY : source/overload_math.cpp.s

source/overload_subscriptor.o: source/overload_subscriptor.cpp.o
.PHONY : source/overload_subscriptor.o

# target to build an object file
source/overload_subscriptor.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/overload_subscriptor.junhui.dir/build.make CMakeFiles/overload_subscriptor.junhui.dir/source/overload_subscriptor.cpp.o
.PHONY : source/overload_subscriptor.cpp.o

source/overload_subscriptor.i: source/overload_subscriptor.cpp.i
.PHONY : source/overload_subscriptor.i

# target to preprocess a source file
source/overload_subscriptor.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/overload_subscriptor.junhui.dir/build.make CMakeFiles/overload_subscriptor.junhui.dir/source/overload_subscriptor.cpp.i
.PHONY : source/overload_subscriptor.cpp.i

source/overload_subscriptor.s: source/overload_subscriptor.cpp.s
.PHONY : source/overload_subscriptor.s

# target to generate assembly for a file
source/overload_subscriptor.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/overload_subscriptor.junhui.dir/build.make CMakeFiles/overload_subscriptor.junhui.dir/source/overload_subscriptor.cpp.s
.PHONY : source/overload_subscriptor.cpp.s

source/pack-deprecated.o: source/pack-deprecated.cpp.o
.PHONY : source/pack-deprecated.o

# target to build an object file
source/pack-deprecated.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/pack-deprecated.junhui.dir/build.make CMakeFiles/pack-deprecated.junhui.dir/source/pack-deprecated.cpp.o
.PHONY : source/pack-deprecated.cpp.o

source/pack-deprecated.i: source/pack-deprecated.cpp.i
.PHONY : source/pack-deprecated.i

# target to preprocess a source file
source/pack-deprecated.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/pack-deprecated.junhui.dir/build.make CMakeFiles/pack-deprecated.junhui.dir/source/pack-deprecated.cpp.i
.PHONY : source/pack-deprecated.cpp.i

source/pack-deprecated.s: source/pack-deprecated.cpp.s
.PHONY : source/pack-deprecated.s

# target to generate assembly for a file
source/pack-deprecated.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/pack-deprecated.junhui.dir/build.make CMakeFiles/pack-deprecated.junhui.dir/source/pack-deprecated.cpp.s
.PHONY : source/pack-deprecated.cpp.s

source/prb_t.o: source/prb_t.cpp.o
.PHONY : source/prb_t.o

# target to build an object file
source/prb_t.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/prb_t.junhui.dir/build.make CMakeFiles/prb_t.junhui.dir/source/prb_t.cpp.o
.PHONY : source/prb_t.cpp.o

source/prb_t.i: source/prb_t.cpp.i
.PHONY : source/prb_t.i

# target to preprocess a source file
source/prb_t.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/prb_t.junhui.dir/build.make CMakeFiles/prb_t.junhui.dir/source/prb_t.cpp.i
.PHONY : source/prb_t.cpp.i

source/prb_t.s: source/prb_t.cpp.s
.PHONY : source/prb_t.s

# target to generate assembly for a file
source/prb_t.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/prb_t.junhui.dir/build.make CMakeFiles/prb_t.junhui.dir/source/prb_t.cpp.s
.PHONY : source/prb_t.cpp.s

source/pure_class.o: source/pure_class.cpp.o
.PHONY : source/pure_class.o

# target to build an object file
source/pure_class.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/pure_class.junhui.dir/build.make CMakeFiles/pure_class.junhui.dir/source/pure_class.cpp.o
.PHONY : source/pure_class.cpp.o

source/pure_class.i: source/pure_class.cpp.i
.PHONY : source/pure_class.i

# target to preprocess a source file
source/pure_class.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/pure_class.junhui.dir/build.make CMakeFiles/pure_class.junhui.dir/source/pure_class.cpp.i
.PHONY : source/pure_class.cpp.i

source/pure_class.s: source/pure_class.cpp.s
.PHONY : source/pure_class.s

# target to generate assembly for a file
source/pure_class.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/pure_class.junhui.dir/build.make CMakeFiles/pure_class.junhui.dir/source/pure_class.cpp.s
.PHONY : source/pure_class.cpp.s

source/referrence.o: source/referrence.cpp.o
.PHONY : source/referrence.o

# target to build an object file
source/referrence.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/referrence.junhui.dir/build.make CMakeFiles/referrence.junhui.dir/source/referrence.cpp.o
.PHONY : source/referrence.cpp.o

source/referrence.i: source/referrence.cpp.i
.PHONY : source/referrence.i

# target to preprocess a source file
source/referrence.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/referrence.junhui.dir/build.make CMakeFiles/referrence.junhui.dir/source/referrence.cpp.i
.PHONY : source/referrence.cpp.i

source/referrence.s: source/referrence.cpp.s
.PHONY : source/referrence.s

# target to generate assembly for a file
source/referrence.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/referrence.junhui.dir/build.make CMakeFiles/referrence.junhui.dir/source/referrence.cpp.s
.PHONY : source/referrence.cpp.s

source/self_memcpy.o: source/self_memcpy.cpp.o
.PHONY : source/self_memcpy.o

# target to build an object file
source/self_memcpy.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/self_memcpy.junhui.dir/build.make CMakeFiles/self_memcpy.junhui.dir/source/self_memcpy.cpp.o
.PHONY : source/self_memcpy.cpp.o

source/self_memcpy.i: source/self_memcpy.cpp.i
.PHONY : source/self_memcpy.i

# target to preprocess a source file
source/self_memcpy.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/self_memcpy.junhui.dir/build.make CMakeFiles/self_memcpy.junhui.dir/source/self_memcpy.cpp.i
.PHONY : source/self_memcpy.cpp.i

source/self_memcpy.s: source/self_memcpy.cpp.s
.PHONY : source/self_memcpy.s

# target to generate assembly for a file
source/self_memcpy.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/self_memcpy.junhui.dir/build.make CMakeFiles/self_memcpy.junhui.dir/source/self_memcpy.cpp.s
.PHONY : source/self_memcpy.cpp.s

source/self_shared_ptr.o: source/self_shared_ptr.cpp.o
.PHONY : source/self_shared_ptr.o

# target to build an object file
source/self_shared_ptr.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/self_shared_ptr.junhui.dir/build.make CMakeFiles/self_shared_ptr.junhui.dir/source/self_shared_ptr.cpp.o
.PHONY : source/self_shared_ptr.cpp.o

source/self_shared_ptr.i: source/self_shared_ptr.cpp.i
.PHONY : source/self_shared_ptr.i

# target to preprocess a source file
source/self_shared_ptr.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/self_shared_ptr.junhui.dir/build.make CMakeFiles/self_shared_ptr.junhui.dir/source/self_shared_ptr.cpp.i
.PHONY : source/self_shared_ptr.cpp.i

source/self_shared_ptr.s: source/self_shared_ptr.cpp.s
.PHONY : source/self_shared_ptr.s

# target to generate assembly for a file
source/self_shared_ptr.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/self_shared_ptr.junhui.dir/build.make CMakeFiles/self_shared_ptr.junhui.dir/source/self_shared_ptr.cpp.s
.PHONY : source/self_shared_ptr.cpp.s

source/static_class.o: source/static_class.cpp.o
.PHONY : source/static_class.o

# target to build an object file
source/static_class.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/static_class.junhui.dir/build.make CMakeFiles/static_class.junhui.dir/source/static_class.cpp.o
.PHONY : source/static_class.cpp.o

source/static_class.i: source/static_class.cpp.i
.PHONY : source/static_class.i

# target to preprocess a source file
source/static_class.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/static_class.junhui.dir/build.make CMakeFiles/static_class.junhui.dir/source/static_class.cpp.i
.PHONY : source/static_class.cpp.i

source/static_class.s: source/static_class.cpp.s
.PHONY : source/static_class.s

# target to generate assembly for a file
source/static_class.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/static_class.junhui.dir/build.make CMakeFiles/static_class.junhui.dir/source/static_class.cpp.s
.PHONY : source/static_class.cpp.s

source/string.o: source/string.cpp.o
.PHONY : source/string.o

# target to build an object file
source/string.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/string.junhui.dir/build.make CMakeFiles/string.junhui.dir/source/string.cpp.o
.PHONY : source/string.cpp.o

source/string.i: source/string.cpp.i
.PHONY : source/string.i

# target to preprocess a source file
source/string.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/string.junhui.dir/build.make CMakeFiles/string.junhui.dir/source/string.cpp.i
.PHONY : source/string.cpp.i

source/string.s: source/string.cpp.s
.PHONY : source/string.s

# target to generate assembly for a file
source/string.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/string.junhui.dir/build.make CMakeFiles/string.junhui.dir/source/string.cpp.s
.PHONY : source/string.cpp.s

source/template.o: source/template.cpp.o
.PHONY : source/template.o

# target to build an object file
source/template.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/template.junhui.dir/build.make CMakeFiles/template.junhui.dir/source/template.cpp.o
.PHONY : source/template.cpp.o

source/template.i: source/template.cpp.i
.PHONY : source/template.i

# target to preprocess a source file
source/template.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/template.junhui.dir/build.make CMakeFiles/template.junhui.dir/source/template.cpp.i
.PHONY : source/template.cpp.i

source/template.s: source/template.cpp.s
.PHONY : source/template.s

# target to generate assembly for a file
source/template.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/template.junhui.dir/build.make CMakeFiles/template.junhui.dir/source/template.cpp.s
.PHONY : source/template.cpp.s

source/test-tmp.o: source/test-tmp.cpp.o
.PHONY : source/test-tmp.o

# target to build an object file
source/test-tmp.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test-tmp.junhui.dir/build.make CMakeFiles/test-tmp.junhui.dir/source/test-tmp.cpp.o
.PHONY : source/test-tmp.cpp.o

source/test-tmp.i: source/test-tmp.cpp.i
.PHONY : source/test-tmp.i

# target to preprocess a source file
source/test-tmp.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test-tmp.junhui.dir/build.make CMakeFiles/test-tmp.junhui.dir/source/test-tmp.cpp.i
.PHONY : source/test-tmp.cpp.i

source/test-tmp.s: source/test-tmp.cpp.s
.PHONY : source/test-tmp.s

# target to generate assembly for a file
source/test-tmp.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test-tmp.junhui.dir/build.make CMakeFiles/test-tmp.junhui.dir/source/test-tmp.cpp.s
.PHONY : source/test-tmp.cpp.s

source/this_ptr.o: source/this_ptr.cpp.o
.PHONY : source/this_ptr.o

# target to build an object file
source/this_ptr.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/this_ptr.junhui.dir/build.make CMakeFiles/this_ptr.junhui.dir/source/this_ptr.cpp.o
.PHONY : source/this_ptr.cpp.o

source/this_ptr.i: source/this_ptr.cpp.i
.PHONY : source/this_ptr.i

# target to preprocess a source file
source/this_ptr.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/this_ptr.junhui.dir/build.make CMakeFiles/this_ptr.junhui.dir/source/this_ptr.cpp.i
.PHONY : source/this_ptr.cpp.i

source/this_ptr.s: source/this_ptr.cpp.s
.PHONY : source/this_ptr.s

# target to generate assembly for a file
source/this_ptr.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/this_ptr.junhui.dir/build.make CMakeFiles/this_ptr.junhui.dir/source/this_ptr.cpp.s
.PHONY : source/this_ptr.cpp.s

source/type_convertion_func.o: source/type_convertion_func.cpp.o
.PHONY : source/type_convertion_func.o

# target to build an object file
source/type_convertion_func.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/type_convertion_func.junhui.dir/build.make CMakeFiles/type_convertion_func.junhui.dir/source/type_convertion_func.cpp.o
.PHONY : source/type_convertion_func.cpp.o

source/type_convertion_func.i: source/type_convertion_func.cpp.i
.PHONY : source/type_convertion_func.i

# target to preprocess a source file
source/type_convertion_func.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/type_convertion_func.junhui.dir/build.make CMakeFiles/type_convertion_func.junhui.dir/source/type_convertion_func.cpp.i
.PHONY : source/type_convertion_func.cpp.i

source/type_convertion_func.s: source/type_convertion_func.cpp.s
.PHONY : source/type_convertion_func.s

# target to generate assembly for a file
source/type_convertion_func.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/type_convertion_func.junhui.dir/build.make CMakeFiles/type_convertion_func.junhui.dir/source/type_convertion_func.cpp.s
.PHONY : source/type_convertion_func.cpp.s

source/va_args.o: source/va_args.cpp.o
.PHONY : source/va_args.o

# target to build an object file
source/va_args.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/va_args.junhui.dir/build.make CMakeFiles/va_args.junhui.dir/source/va_args.cpp.o
.PHONY : source/va_args.cpp.o

source/va_args.i: source/va_args.cpp.i
.PHONY : source/va_args.i

# target to preprocess a source file
source/va_args.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/va_args.junhui.dir/build.make CMakeFiles/va_args.junhui.dir/source/va_args.cpp.i
.PHONY : source/va_args.cpp.i

source/va_args.s: source/va_args.cpp.s
.PHONY : source/va_args.s

# target to generate assembly for a file
source/va_args.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/va_args.junhui.dir/build.make CMakeFiles/va_args.junhui.dir/source/va_args.cpp.s
.PHONY : source/va_args.cpp.s

source/void_ptr.o: source/void_ptr.cpp.o
.PHONY : source/void_ptr.o

# target to build an object file
source/void_ptr.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/void_ptr.junhui.dir/build.make CMakeFiles/void_ptr.junhui.dir/source/void_ptr.cpp.o
.PHONY : source/void_ptr.cpp.o

source/void_ptr.i: source/void_ptr.cpp.i
.PHONY : source/void_ptr.i

# target to preprocess a source file
source/void_ptr.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/void_ptr.junhui.dir/build.make CMakeFiles/void_ptr.junhui.dir/source/void_ptr.cpp.i
.PHONY : source/void_ptr.cpp.i

source/void_ptr.s: source/void_ptr.cpp.s
.PHONY : source/void_ptr.s

# target to generate assembly for a file
source/void_ptr.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/void_ptr.junhui.dir/build.make CMakeFiles/void_ptr.junhui.dir/source/void_ptr.cpp.s
.PHONY : source/void_ptr.cpp.s

# Help Target
help:
	@echo "The following are some of the valid targets for this Makefile:"
	@echo "... all (the default if no target is provided)"
	@echo "... clean"
	@echo "... depend"
	@echo "... edit_cache"
	@echo "... rebuild_cache"
	@echo "... alignas.junhui"
	@echo "... class_size.junhui"
	@echo "... compile_function.junhui"
	@echo "... copy_constructor.junhui"
	@echo "... copy_deep.junhui"
	@echo "... cpp11.junhui"
	@echo "... disassembly.junhui"
	@echo "... double_colon.junhui"
	@echo "... enclosed_class.junhui"
	@echo "... forbid_copy_asign.junhui"
	@echo "... friends.junhui"
	@echo "... global_macro.junhui"
	@echo "... inherit.junhui"
	@echo "... knowledge_points.junhui"
	@echo "... lambda.junhui"
	@echo "... main.junhui"
	@echo "... memory_in_c.junhui"
	@echo "... meta_execute.junhui"
	@echo "... meta_naming.junhui"
	@echo "... method_chain.junhui"
	@echo "... overload.junhui"
	@echo "... overload_assignment.junhui"
	@echo "... overload_math.junhui"
	@echo "... overload_subscriptor.junhui"
	@echo "... pack-deprecated.junhui"
	@echo "... prb_t.junhui"
	@echo "... pure_class.junhui"
	@echo "... referrence.junhui"
	@echo "... self_memcpy.junhui"
	@echo "... self_shared_ptr.junhui"
	@echo "... static_class.junhui"
	@echo "... string.junhui"
	@echo "... template.junhui"
	@echo "... test-tmp.junhui"
	@echo "... this_ptr.junhui"
	@echo "... type_convertion_func.junhui"
	@echo "... va_args.junhui"
	@echo "... void_ptr.junhui"
	@echo "... source/alignas.o"
	@echo "... source/alignas.i"
	@echo "... source/alignas.s"
	@echo "... source/class_size.o"
	@echo "... source/class_size.i"
	@echo "... source/class_size.s"
	@echo "... source/compile_function.o"
	@echo "... source/compile_function.i"
	@echo "... source/compile_function.s"
	@echo "... source/copy_constructor.o"
	@echo "... source/copy_constructor.i"
	@echo "... source/copy_constructor.s"
	@echo "... source/copy_deep.o"
	@echo "... source/copy_deep.i"
	@echo "... source/copy_deep.s"
	@echo "... source/cpp11.o"
	@echo "... source/cpp11.i"
	@echo "... source/cpp11.s"
	@echo "... source/disassembly.o"
	@echo "... source/disassembly.i"
	@echo "... source/disassembly.s"
	@echo "... source/double_colon.o"
	@echo "... source/double_colon.i"
	@echo "... source/double_colon.s"
	@echo "... source/enclosed_class.o"
	@echo "... source/enclosed_class.i"
	@echo "... source/enclosed_class.s"
	@echo "... source/forbid_copy_asign.o"
	@echo "... source/forbid_copy_asign.i"
	@echo "... source/forbid_copy_asign.s"
	@echo "... source/friends.o"
	@echo "... source/friends.i"
	@echo "... source/friends.s"
	@echo "... source/global_macro.o"
	@echo "... source/global_macro.i"
	@echo "... source/global_macro.s"
	@echo "... source/inherit.o"
	@echo "... source/inherit.i"
	@echo "... source/inherit.s"
	@echo "... source/knowledge_points.o"
	@echo "... source/knowledge_points.i"
	@echo "... source/knowledge_points.s"
	@echo "... source/lambda.o"
	@echo "... source/lambda.i"
	@echo "... source/lambda.s"
	@echo "... source/main.o"
	@echo "... source/main.i"
	@echo "... source/main.s"
	@echo "... source/memory_in_c.o"
	@echo "... source/memory_in_c.i"
	@echo "... source/memory_in_c.s"
	@echo "... source/meta_execute.o"
	@echo "... source/meta_execute.i"
	@echo "... source/meta_execute.s"
	@echo "... source/meta_naming.o"
	@echo "... source/meta_naming.i"
	@echo "... source/meta_naming.s"
	@echo "... source/method_chain.o"
	@echo "... source/method_chain.i"
	@echo "... source/method_chain.s"
	@echo "... source/overload.o"
	@echo "... source/overload.i"
	@echo "... source/overload.s"
	@echo "... source/overload_assignment.o"
	@echo "... source/overload_assignment.i"
	@echo "... source/overload_assignment.s"
	@echo "... source/overload_math.o"
	@echo "... source/overload_math.i"
	@echo "... source/overload_math.s"
	@echo "... source/overload_subscriptor.o"
	@echo "... source/overload_subscriptor.i"
	@echo "... source/overload_subscriptor.s"
	@echo "... source/pack-deprecated.o"
	@echo "... source/pack-deprecated.i"
	@echo "... source/pack-deprecated.s"
	@echo "... source/prb_t.o"
	@echo "... source/prb_t.i"
	@echo "... source/prb_t.s"
	@echo "... source/pure_class.o"
	@echo "... source/pure_class.i"
	@echo "... source/pure_class.s"
	@echo "... source/referrence.o"
	@echo "... source/referrence.i"
	@echo "... source/referrence.s"
	@echo "... source/self_memcpy.o"
	@echo "... source/self_memcpy.i"
	@echo "... source/self_memcpy.s"
	@echo "... source/self_shared_ptr.o"
	@echo "... source/self_shared_ptr.i"
	@echo "... source/self_shared_ptr.s"
	@echo "... source/static_class.o"
	@echo "... source/static_class.i"
	@echo "... source/static_class.s"
	@echo "... source/string.o"
	@echo "... source/string.i"
	@echo "... source/string.s"
	@echo "... source/template.o"
	@echo "... source/template.i"
	@echo "... source/template.s"
	@echo "... source/test-tmp.o"
	@echo "... source/test-tmp.i"
	@echo "... source/test-tmp.s"
	@echo "... source/this_ptr.o"
	@echo "... source/this_ptr.i"
	@echo "... source/this_ptr.s"
	@echo "... source/type_convertion_func.o"
	@echo "... source/type_convertion_func.i"
	@echo "... source/type_convertion_func.s"
	@echo "... source/va_args.o"
	@echo "... source/va_args.i"
	@echo "... source/va_args.s"
	@echo "... source/void_ptr.o"
	@echo "... source/void_ptr.i"
	@echo "... source/void_ptr.s"
.PHONY : help



#=============================================================================
# Special targets to cleanup operation of make.

# Special rule to run CMake to check the build system integrity.
# No rule that depends on this can have commands that come from listfiles
# because they might be regenerated.
cmake_check_build_system:
	$(CMAKE_COMMAND) -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 0
.PHONY : cmake_check_build_system

